<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Highcharts Example</title>

		<style type="text/css">

		</style>
	</head>
	<body>
<script src="../../code/highcharts.js"></script>
<script src="../../code/highcharts-more.js"></script>
<script src="../../code/modules/exporting.js"></script>
<script src="../../code/modules/export-data.js"></script>
<table style="padding-top:25px;padding-bottom:50px;">
			<tr>
				<td style="width:100px;">
<a href="Linecharts.htm">Line charts</a>
				</td>
				<td style="width:100px;">
<a href="Areacharts.htm">Area charts</a>
				</td>
				<td style="width:100px;">
<a href="Columnbar.htm">Column & bar</a>
				</td>
				<td style="width:100px;">
<a href="Piechart.htm">Pie chart</a>
				</td>
				<td style="width:100px;">
<a href="Bubblechart.htm">Bubble chart</a>
				</td>
				<td style="width:100px;">
<a href="Combinations.htm">Combinations</a>
				</td>
				<td style="width:100px;">
<a href="Styledmode.htm">Styled mode</a>
				</td>
				<td style="width:100px;">
<a href="Updating.htm">Updating</a>
				</td>
				<td style="width:100px;">
<a href="3Dcharts.htm">3D charts</a>
				</td>
				<td style="width:100px;">
<a href="Gauges.htm">Gauges</a>
				</td>
				<td style="width:100px;">
<a href="Errorbar.htm">Error bar</a>
				</td>
			</tr>
		</table>


<div id="container" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>



		<script type="text/javascript">

Highcharts.chart('container', {

    chart: {
        type: 'gauge',
        alignTicks: false,
        plotBackgroundColor: null,
        plotBackgroundImage: null,
        plotBorderWidth: 0,
        plotShadow: false
    },

    title: {
        text: 'Speedometer with dual axes'
    },

    pane: {
        startAngle: -150,
        endAngle: 150
    },

    yAxis: [{
        min: 0,
        max: 200,
        lineColor: '#339',
        tickColor: '#339',
        minorTickColor: '#339',
        offset: -25,
        lineWidth: 2,
        labels: {
            distance: -20,
            rotation: 'auto'
        },
        tickLength: 5,
        minorTickLength: 5,
        endOnTick: false
    }, {
        min: 0,
        max: 124,
        tickPosition: 'outside',
        lineColor: '#933',
        lineWidth: 2,
        minorTickPosition: 'outside',
        tickColor: '#933',
        minorTickColor: '#933',
        tickLength: 5,
        minorTickLength: 5,
        labels: {
            distance: 12,
            rotation: 'auto'
        },
        offset: -20,
        endOnTick: false
    }],

    series: [{
        name: 'Speed',
        data: [80],
        dataLabels: {
            formatter: function () {
                var kmh = this.y,
                    mph = Math.round(kmh * 0.621);
                return '<span style="color:#339">' + kmh + ' km/h</span><br/>' +
                    '<span style="color:#933">' + mph + ' mph</span>';
            },
            backgroundColor: {
                linearGradient: {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 1
                },
                stops: [
                    [0, '#DDD'],
                    [1, '#FFF']
                ]
            }
        },
        tooltip: {
            valueSuffix: ' km/h'
        }
    }]

},
    // Add some life
    function (chart) {
        setInterval(function () {
            if (chart.axes) { // not destroyed
                var point = chart.series[0].points[0],
                    newVal,
                    inc = Math.round((Math.random() - 0.5) * 20);

                newVal = point.y + inc;
                if (newVal < 0 || newVal > 200) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }
        }, 3000);

    });

		</script>
	</body>
</html>
